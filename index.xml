<?xml-stylesheet href="/rss.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>潘文斌的技术文章</title><link>https://www.panwenbin.cn/</link><description>Recent content on 潘文斌的技术文章</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>2025 潘文斌</copyright><lastBuildDate>Thu, 10 Jul 2025 08:00:00 +0800</lastBuildDate><atom:link href="https://www.panwenbin.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>HTTP中的chunked是什么</title><link>https://www.panwenbin.cn/posts/http-chunked/</link><pubDate>Thu, 10 Jul 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/http-chunked/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/http-chunked/ -&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>HTTP/1.1中，响应头中的&lt;code>Transfer-Encoding: chunked&lt;/code>是什么意思？&lt;/p>&lt;/blockquote>
&lt;h2 id="回答">回答&lt;/h2>
&lt;p>在HTTP/1.1中，&lt;code>Transfer-Encoding: chunked&lt;/code>是一种传输编码方式，用于在响应中分块传输数据。这种方式允许服务器在不知道内容长度的情况下发送响应，适用于动态生成的内容或流式数据。&lt;/p>
&lt;p>对于HTML内容，使用&lt;code>chunked&lt;/code>编码时，可以提高响应速度，浏览器可以在接收到第一个数据块后立即开始渲染页面，而不必等待整个响应完成。这对于需要实时更新或逐步加载的内容非常有用。&lt;/p>
&lt;p>对于动态生成的内容，可能不知道最后的数据大小，更适合使用&lt;code>chunked&lt;/code>编码。尽早把生成的内容发送出去，还能节省服务器内存占用。&lt;/p>
&lt;h2 id="格式">格式&lt;/h2>
&lt;pre tabindex="0">&lt;code>长度\r\n
内容\r\n
长度\r\n
内容\r\n
长度(0)\r\n
内容(空)\r\n
&lt;/code>&lt;/pre>&lt;p>例如:&lt;/p>
&lt;pre tabindex="0">&lt;code>4\r\n
Wiki\r\n
5\r\n
pedia\r\n
E\r\n
in\r\n
\r\n
chunks.\r\n
0\r\n
\r\n
&lt;/code>&lt;/pre>&lt;h2 id="废弃">废弃&lt;/h2>
&lt;p>在 HTTP/2 中，Transfer-Encoding: chunked 被废弃，因为 HTTP/2 引入了更先进的 帧（frame）机制 和 流（stream）控制，已经内建了流式传输能力，无需使用传统的 chunked 编码，并且还支持多路复用。&lt;/p>- https://www.panwenbin.cn/posts/http-chunked/ - 2025 潘文斌</description></item><item><title>Linux终端如何显示彩色文字</title><link>https://www.panwenbin.cn/posts/linux-console-color-text/</link><pubDate>Mon, 07 Jul 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/linux-console-color-text/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/linux-console-color-text/ -&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>Linux终端如何显示彩色文字？&lt;/p>&lt;/blockquote>
&lt;h2 id="回答">回答&lt;/h2>
&lt;p>打印彩色文字需要使用ANSI转义序列。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">echo&lt;/span> -e &lt;span style="color:#63c381">&amp;#34;\033[31m红色文字\033[0m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&amp;quot;\033&amp;quot;也可以用&amp;quot;\x1b&amp;quot;，是ASCII码的ESC字符，&amp;ldquo;31&amp;quot;表示红色，&amp;ldquo;0&amp;quot;表示重置颜色。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>代码&lt;/th>
&lt;th>颜色&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>30&lt;/td>
&lt;td>黑色&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>31&lt;/td>
&lt;td>红色&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>32&lt;/td>
&lt;td>绿色&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>33&lt;/td>
&lt;td>黄色&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>34&lt;/td>
&lt;td>蓝色&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>35&lt;/td>
&lt;td>紫色&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>36&lt;/td>
&lt;td>青色&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>37&lt;/td>
&lt;td>白色&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>加粗&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td>下划线&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>更多颜色代码可以参考&lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code#Colors">ANSI escape code&lt;/a>。&lt;/p>- https://www.panwenbin.cn/posts/linux-console-color-text/ - 2025 潘文斌</description></item><item><title>Kodi如何重置所有配置</title><link>https://www.panwenbin.cn/posts/kodi-reset/</link><pubDate>Sun, 06 Jul 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/kodi-reset/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/kodi-reset/ -&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>Kodi配置和插件搞乱了，如何重置所有配置？&lt;/p>&lt;/blockquote>
&lt;h2 id="回答">回答&lt;/h2>
&lt;p>只要删除配置目录即可。以下是Kodi在不同操作系统上的配置目录：&lt;/p>
&lt;pre tabindex="0">&lt;code>Android - Android/data/org.xbmc.kodi/files/.kodi
iOS - /private/var/mobile/Library/Preferences/Kodi
LibreELEC - /storage/.kodi
Linux - ~/.kodi
OSMC - /home/osmc/.kodi
Mac - /Users/&amp;lt;your_user_name&amp;gt;/Library/Application Support/Kodi
Windows - %APPDATA%\Kodi
Windows UWP - %LOCALAPPDATA%\Packages\XBMCFoundation.Kodi_4n2hpmxwrvr6p\LocalCache\Roaming\Kodi\
&lt;/code>&lt;/pre>- https://www.panwenbin.cn/posts/kodi-reset/ - 2025 潘文斌</description></item><item><title>Linux如何使用iSCSI挂载NAS远程磁盘</title><link>https://www.panwenbin.cn/posts/linux-use-iscsi/</link><pubDate>Sun, 06 Jul 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/linux-use-iscsi/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/linux-use-iscsi/ -&lt;h2 id="问答">问答&lt;/h2>
&lt;blockquote>
&lt;p>使用NAS磁盘时体验最接近本地盘的是iSCSI，那么如何在Linux上使用iSCSI挂载NAS远程磁盘呢？&lt;/p>&lt;/blockquote>
&lt;h2 id="回答">回答&lt;/h2>
&lt;p>安装iSCSI相关软件包：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install open-iscsi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发现服务&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo iscsiadm -m discovery -t sendtargets -p &amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>登录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo iscsiadm -m node -T &amp;lt;target&amp;gt; -p &amp;lt;host&amp;gt;:&amp;lt;port&amp;gt; --login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时可以发现已经有新添加的/dev/sdX设备了。像本地磁盘一样使用就行。&lt;/p>
&lt;p>不用了，登出&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo iscsiadm -m node -T &amp;lt;target&amp;gt; -p &amp;lt;host&amp;gt;:&amp;lt;port&amp;gt; --logout
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- https://www.panwenbin.cn/posts/linux-use-iscsi/ - 2025 潘文斌</description></item><item><title>JS匿名函数直接执行怎么写</title><link>https://www.panwenbin.cn/posts/js-anonymous-function/</link><pubDate>Fri, 04 Jul 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/js-anonymous-function/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/js-anonymous-function/ -&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>Javascript中匿名函数直接执行怎么写？&lt;br>
&lt;code>function(){}()&lt;/code>这种写法为什么会报错？&lt;/p>&lt;/blockquote>
&lt;h2 id="回答">回答&lt;/h2>
&lt;p>常规写法，最通用，ES5支持，最外层的括号使得function识别为表达式，如果没有括号会被识别为函数声明。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#c678dd">function&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">console&lt;/span>.&lt;span style="color:#c1abea">log&lt;/span>(&lt;span style="color:#98c379">&amp;#39;IIFE 1&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>箭头函数写法，最简短，ES6支持。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">console&lt;/span>.&lt;span style="color:#c1abea">log&lt;/span>(&lt;span style="color:#98c379">&amp;#39;IIFE 2&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>前操作符写法，不太常用，ES5支持。同样可以防止识别为函数声明。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">!&lt;/span>&lt;span style="color:#c678dd">function&lt;/span> () { &lt;span style="color:#c1abea">console&lt;/span>.&lt;span style="color:#c1abea">log&lt;/span>(&lt;span style="color:#98c379">&amp;#39;IIFE 3&amp;#39;&lt;/span>); }();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">+&lt;/span>&lt;span style="color:#c678dd">function&lt;/span> () { &lt;span style="color:#c1abea">console&lt;/span>.&lt;span style="color:#c1abea">log&lt;/span>(&lt;span style="color:#98c379">&amp;#39;IIFE 3&amp;#39;&lt;/span>); }();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">-&lt;/span>&lt;span style="color:#c678dd">function&lt;/span> () { &lt;span style="color:#c1abea">console&lt;/span>.&lt;span style="color:#c1abea">log&lt;/span>(&lt;span style="color:#98c379">&amp;#39;IIFE 3&amp;#39;&lt;/span>); }();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>总结：如果function外没有括号或者前操作符，function会被识别为函数声明，而不作为匿名函数来执行。&lt;/p>- https://www.panwenbin.cn/posts/js-anonymous-function/ - 2025 潘文斌</description></item><item><title>Git命令方便的Alias</title><link>https://www.panwenbin.cn/posts/git-alias/</link><pubDate>Wed, 02 Jul 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/git-alias/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/git-alias/ -&lt;h2 id="起因">起因&lt;/h2>
&lt;blockquote>
&lt;p>Git命令很多，不说不常用的完全记不住。就算常用的，也略显太长了，用起来不方便。&lt;/p>&lt;/blockquote>
&lt;h2 id="git别名">Git别名&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># 树形 log（简洁视图）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.lg &lt;span style="color:#63c381">&amp;#34;log --oneline --graph --decorate --all&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># Git 仓库根目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.root &lt;span style="color:#98c379">&amp;#39;rev-parse --show-toplevel&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># 状态 + 简洁信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.st &lt;span style="color:#63c381">&amp;#34;status -sb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># 简洁的 diff（侧边-by-side + 颜色增强）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.df &lt;span style="color:#63c381">&amp;#34;diff --color-words&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># 快速 amend（修改上次提交）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.amend &lt;span style="color:#63c381">&amp;#34;commit --amend --no-edit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># 当前分支推送并设置上游&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.pushup &lt;span style="color:#63c381">&amp;#34;push --set-upstream origin HEAD&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后就可以使用&lt;code>git lg&lt;/code>查看树形日志等操作，简短好记。&lt;/p>- https://www.panwenbin.cn/posts/git-alias/ - 2025 潘文斌</description></item><item><title>Linux安装VNC服务器</title><link>https://www.panwenbin.cn/posts/linux-vnc-server/</link><pubDate>Thu, 26 Jun 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/linux-vnc-server/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/linux-vnc-server/ -&lt;blockquote>
&lt;p>Linux服务器通常是不安装桌面的，如果自用的，安装桌面环境后，使用VNC连接当云电脑使用。&lt;/p>&lt;/blockquote>
&lt;h2 id="安装软件包">安装软件包&lt;/h2>
&lt;p>这边使用xfce作为桌面，使用lightdm作为桌面管理器，使用TigerVNC作为VNC服务器。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install xfce4 lightdm tigervnc-standalone-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用">使用&lt;/h2>
&lt;p>输入&lt;code>vncserver&lt;/code>就可以启动VNC服务器，第一次运行会提示设置密码，但是默认设置启动的是监听到&lt;code>127.0.0.1&lt;/code>的，远程无法连接&lt;/p>
&lt;h3 id="配置vnc">配置VNC&lt;/h3>
&lt;p>修改&lt;code>.vnc/config&lt;/code>，写入如下配置&lt;/p>
&lt;pre tabindex="0">&lt;code>session=xfce
localhost=no
alwaysshared
&lt;/code>&lt;/pre>&lt;p>设置使用xfce桌面，不监听到localhost，alwaysshared允许x2vnc等用来键鼠控制。&lt;/p>
&lt;p>使用&lt;code>vncserver -kill :1&lt;/code>关闭之前打开的session，再次运行&lt;code>vncserver&lt;/code>，这次就可以远程连接了，默认端口是5901。&lt;/p>
&lt;h2 id="xorg">xorg&lt;/h2>
&lt;p>上面的方式启动的VNC都是虚拟桌面的，如果要使用物理显示器的桌面，需要使用xorg扩展。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sdudo apt-get install tigervnc-xorg-extension
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置xorg-extension">配置xorg-extension&lt;/h3>
&lt;p>新建&lt;code>/etc/X11/xorg.conf.d/10-vnc.conf&lt;/code>文件，内容如下&lt;/p>
&lt;pre tabindex="0">&lt;code>Section &amp;#34;Module&amp;#34;
Load &amp;#34;vnc&amp;#34;
EndSection
Section &amp;#34;Screen&amp;#34;
Identifier &amp;#34;Screen0&amp;#34;
Option &amp;#34;UserPasswdVerifier&amp;#34; &amp;#34;VncAuth&amp;#34;
Option &amp;#34;PasswordFile&amp;#34; &amp;#34;/home/&amp;lt;user&amp;gt;/.vnc/passwd&amp;#34;
EndSection
&lt;/code>&lt;/pre>&lt;p>把&lt;code>&amp;lt;user&amp;gt;&lt;/code>替换成实际的用户名。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl restart lightdm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启lightdm服务后，就可以&lt;code>5900&lt;/code>端口，连接到物理显示器的桌面了。&lt;/p>- https://www.panwenbin.cn/posts/linux-vnc-server/ - 2025 潘文斌</description></item><item><title>Linux下怎么查看进程的环境变量</title><link>https://www.panwenbin.cn/posts/linux-process-env/</link><pubDate>Mon, 23 Jun 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/linux-process-env/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/linux-process-env/ -&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>Linux下怎么查看进程的环境变量？&lt;/p>&lt;/blockquote>
&lt;h2 id="回答">回答&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat /proc/&amp;lt;pid&amp;gt;/environ | tr &lt;span style="color:#98c379">&amp;#39;\0&amp;#39;&lt;/span> &lt;span style="color:#98c379">&amp;#39;\n&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- https://www.panwenbin.cn/posts/linux-process-env/ - 2025 潘文斌</description></item><item><title>Ranger添加自定义操作</title><link>https://www.panwenbin.cn/posts/ranger-custom-operation/</link><pubDate>Sun, 22 Jun 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/ranger-custom-operation/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/ranger-custom-operation/ -&lt;h2 id="起因">起因&lt;/h2>
&lt;blockquote>
&lt;p>平时使用ranger就是遍历一下目录，选择打开一下文件。对于其他操作不太顺手。
这次想选择文件并执行一个自定义操作，比如用ffmpeg把flv无损转为mp4。&lt;/p>&lt;/blockquote>
&lt;h2 id="步骤">步骤&lt;/h2>
&lt;h3 id="定义操作">定义操作&lt;/h3>
&lt;p>修改&lt;code>~/.config/ranger/commands.py&lt;/code>，添加&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">from&lt;/span> &lt;span style="color:#76a9f9">ranger.api.commands&lt;/span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#c1abea">Command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">flv_to_mp4&lt;/span>(&lt;span style="color:#c1abea">Command&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#63c381">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381"> :flv_to_mp4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381"> 使用 ffmpeg 将选中的 .flv 文件转为 .mp4（使用 -c copy ）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">def&lt;/span> &lt;span style="color:#00b1f7">execute&lt;/span>(&lt;span style="color:#c1abea">self&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">files&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> [&lt;span style="color:#c1abea">f&lt;/span> &lt;span style="color:#c678dd">for&lt;/span> &lt;span style="color:#c1abea">f&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">in&lt;/span> &lt;span style="color:#c1abea">self&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">fm&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">thistab&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">get_selection&lt;/span>() &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#c1abea">f&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">path&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">endswith&lt;/span>(&lt;span style="color:#63c381">&amp;#34;.flv&amp;#34;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">not&lt;/span> &lt;span style="color:#c1abea">files&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">self&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">fm&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">notify&lt;/span>(&lt;span style="color:#63c381">&amp;#34;未选中 .flv 文件&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">bad&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#b756ff;font-weight:bold">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">for&lt;/span> &lt;span style="color:#c1abea">f&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">in&lt;/span> &lt;span style="color:#c1abea">files&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">input_path&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">f&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">path&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">output_path&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">os&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">path&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">splitext&lt;/span>(&lt;span style="color:#c1abea">input_path&lt;/span>)[&lt;span style="color:#d19a66">0&lt;/span>] &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#63c381">&amp;#34;.mp4&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic"># 如果输出文件已存在，则跳过&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#c1abea">os&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">path&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">exists&lt;/span>(&lt;span style="color:#c1abea">output_path&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">self&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">fm&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">notify&lt;/span>(&lt;span style="color:#98c379">f&lt;/span>&lt;span style="color:#63c381">&amp;#34;已存在，跳过: &lt;/span>&lt;span style="color:#98c379">{&lt;/span>&lt;span style="color:#c1abea">output_path&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#63c381">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">cmd&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">f&lt;/span>&lt;span style="color:#63c381">&amp;#34;ffmpeg -y -i &amp;#39;&lt;/span>&lt;span style="color:#98c379">{&lt;/span>&lt;span style="color:#c1abea">input_path&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#63c381">&amp;#39; -c copy &amp;#39;&lt;/span>&lt;span style="color:#98c379">{&lt;/span>&lt;span style="color:#c1abea">output_path&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#63c381">&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">self&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">fm&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">run&lt;/span>(&lt;span style="color:#c1abea">cmd&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">self&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">fm&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">notify&lt;/span>(&lt;span style="color:#98c379">f&lt;/span>&lt;span style="color:#63c381">&amp;#34;转换完成: &lt;/span>&lt;span style="color:#98c379">{&lt;/span>&lt;span style="color:#c1abea">output_path&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#63c381">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="绑定按键">绑定按键&lt;/h3>
&lt;p>在&lt;code>~/.config/ranger/rc.conf&lt;/code>中添加绑定&lt;code>fm&lt;/code>键为自定义操作。&lt;/p>
&lt;pre tabindex="0">&lt;code>map fm flv_to_mp4
&lt;/code>&lt;/pre>&lt;h2 id="使用">使用&lt;/h2>
&lt;p>在ranger中选中文件，然后按&lt;code>fm&lt;/code>键执行转换操作。&lt;/p>- https://www.panwenbin.cn/posts/ranger-custom-operation/ - 2025 潘文斌</description></item><item><title>TLS指纹检测识别客户端</title><link>https://www.panwenbin.cn/posts/tls-fingerprint/</link><pubDate>Tue, 17 Jun 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/tls-fingerprint/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/tls-fingerprint/ -&lt;h2 id="什么是tls指纹">什么是TLS指纹&lt;/h2>
&lt;blockquote>
&lt;p>TLS指纹（TLS Fingerprinting）是一种用于识别和分类网络流量中使用的TLS（Transport Layer Security）协议版本、加密套件及其他相关参数的技术。通过分析TLS握手阶段的特征（如Client Hello报文中的字段排列、扩展列表等），可以生成一个独特的“指纹”，用于识别客户端（如浏览器、应用程序或设备）的类型、版本甚至是否为自动化工具（如爬虫）。&lt;/p>&lt;/blockquote>
&lt;h2 id="实现原理">实现原理&lt;/h2>
&lt;p>Client Hello 报文分析&lt;br>
TLS握手开始时，客户端会发送Client Hello报文，包含以下关键信息：&lt;/p>
&lt;ul>
&lt;li>TLS版本（如TLS 1.2、TLS 1.3）。&lt;/li>
&lt;li>支持的加密套件（Cipher Suites）列表及其顺序。&lt;/li>
&lt;li>扩展（Extensions）类型及顺序（如SNI、ALPN、签名算法等）。&lt;/li>
&lt;li>其他字段（如椭圆曲线类型、签名算法等）。&lt;/li>
&lt;/ul>
&lt;p>指纹生成方式&lt;br>
将这些字段的组合（尤其是顺序和特定选项）通过哈希（如JA3算法）或规则匹配转换为唯一标识符。例如：&lt;/p>
&lt;ul>
&lt;li>JA3/JA3S：将TLS版本、加密套件、扩展等字段按顺序拼接后计算MD5哈希，生成指纹（如771,4865-4866-4867-&amp;hellip;,23-65281-10-11-16-5-13-&amp;hellip; → MD5哈希）。&lt;/li>
&lt;li>其他方法：如TLSH、Akamai的指纹方案等。&lt;/li>
&lt;/ul>
&lt;h2 id="检测">检测&lt;/h2>
&lt;p>有一些网站提供了tls指纹检测&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tls.browserleaks.com/json">https://tls.browserleaks.com/json&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tls.peet.ws">https://tls.peet.ws&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="模拟">模拟&lt;/h2>
&lt;p>通过定制化TLS栈模拟浏览器的握手过程。维护比较活跃的有 &lt;code>curl_cffi&lt;/code>（python库）&lt;/p>
&lt;p>&lt;a href="https://github.com/lexiforest/curl_cffi">curl_cffi&lt;/a>是一个对&lt;a href="https://github.com/lexiforest/curl-impersonate">curl-impersonate&lt;/a>的binding。维护活跃，截止目前支持到chrome136。&lt;/p>
&lt;p>安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install curl_cffi --upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">curl_cffi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># Notice the impersonate parameter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">r&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">curl_cffi&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">get&lt;/span>(&lt;span style="color:#63c381">&amp;#34;https://tls.browserleaks.com/json&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">impersonate&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#63c381">&amp;#34;chrome&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">print&lt;/span>(&lt;span style="color:#c1abea">r&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#c1abea">json&lt;/span>())
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- https://www.panwenbin.cn/posts/tls-fingerprint/ - 2025 潘文斌</description></item></channel></rss>