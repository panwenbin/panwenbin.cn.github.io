<?xml-stylesheet href="/rss.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>潘文斌的技术文章</title><link>https://www.panwenbin.cn/</link><description>Recent content on 潘文斌的技术文章</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>2025 潘文斌</copyright><lastBuildDate>Fri, 04 Jul 2025 08:00:00 +0800</lastBuildDate><atom:link href="https://www.panwenbin.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Chrome升级137后无法键盘输入英文</title><link>https://www.panwenbin.cn/posts/chrome-keyboard-no-input/</link><pubDate>Sun, 01 Jun 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/chrome-keyboard-no-input/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/chrome-keyboard-no-input/ -&lt;h2 id="现象">现象&lt;/h2>
&lt;blockquote>
&lt;p>Debian上GoogleChrome升级到&lt;code>137.0.7151.55&lt;/code>后，键盘输入没反应，但是键盘灯是亮的，还以为键盘失灵了，
重新插拔USB后，现象依旧，但是切换到中文输入后可以正常输入。再测试其他地方键盘工作正常，那显然是Chrome更新后造成的了。&lt;/p>&lt;/blockquote>
&lt;h2 id="2025-06-25更新">2025-06-25更新&lt;/h2>
&lt;blockquote>
&lt;p>升级到&lt;code>137.0.7151.119-1&lt;/code>后，已经正常。&lt;/p>&lt;/blockquote>
&lt;h2 id="初步判断">初步判断&lt;/h2>
&lt;p>输入法与GUI框架设置问题。Linux上有诸多GUI框架，如GTK、QT等。&lt;/p>
&lt;h2 id="探寻">探寻&lt;/h2>
&lt;p>重启Chrome，无效。重启系统，无效。&lt;/p>
&lt;p>修改Chrome的设置-外观-主题，当前是GTK，改为QT和经典，均无效。
看起来和预想的不一样呢。&lt;/p>
&lt;p>从命令行启动&lt;code>google-chrome&lt;/code>，当键盘输入时，控制台会输出如下错误：&lt;/p>
&lt;pre tabindex="0">&lt;code>(google-chrome:7096): Gdk-WARNING **: 18:40:25.582: Event with type 8 not holding a GdkDevice. It is most likely synthesized outside Gdk/GTK+
&lt;/code>&lt;/pre>&lt;p>搜索错误信息，有人反馈，未找到解决方案。&lt;/p>
&lt;p>最终在chromium的&lt;a href="https://issues.chromium.org/issues/408449463">issue 408449463&lt;/a>中找到相关问题。
经测试，对我有效的参数是 &lt;code>--gtk-version=4&lt;/code>&lt;/p>
&lt;p>验证，先用&lt;code>ps -ef|grep chrome&lt;/code>找到主进程ID，
当不加参数时，&lt;code>lsof -p &amp;lt;pid&amp;gt;|grep libgtk&lt;/code>得到的是&lt;/p>
&lt;pre tabindex="0">&lt;code>chrome 24064 user mem REG 8,6 8497304 6295827 /usr/lib/x86_64-linux-gnu/libgtk-3.so.0.2406.32
&lt;/code>&lt;/pre>&lt;p>加上参数后，得到的是&lt;/p>
&lt;pre tabindex="0">&lt;code>chrome 24806 user mem REG 8,6 8698432 6303568 /usr/lib/x86_64-linux-gnu/libgtk-4.so.1.800.3
&lt;/code>&lt;/pre>&lt;h2 id="结论">结论&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>google-chrome --gtk-version&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#d19a66">4&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果从快捷图标启动，修改desktop文件，在Exec的命令上都加上参数。&lt;/p>
&lt;p>目前看依然属于bug，以上方式可以临时解决，后续可能官方更新后就没问题了。&lt;/p>- https://www.panwenbin.cn/posts/chrome-keyboard-no-input/ - 2025 潘文斌</description></item><item><title>重拾RSS - 一种复古的信息订阅方式</title><link>https://www.panwenbin.cn/posts/repick-rss/</link><pubDate>Sat, 31 May 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/repick-rss/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/repick-rss/ -&lt;h2 id="起因">起因&lt;/h2>
&lt;blockquote>
&lt;p>一开始倒是也没想到RSS，想的是给自己常用的网站统一API，方便自己使用和集成。&lt;br>
根据网站类型可以抽象出统一接口。首先对于最常见的资讯类网站，抽象也比较简单。&lt;br>
突然想到这类网站曾经都提供RSS订阅，貌似就可以满足我的需求了。&lt;/p>&lt;/blockquote>
&lt;h2 id="rss现状">RSS现状&lt;/h2>
&lt;p>随着各平台和软件逐渐封闭，变成一个个信息孤岛，现在依然提供RSS订阅的网站已经比较少了。&lt;br>
主要是一些盈利性质不明显的论坛和个人博客，还默认提供着RSS。有一些商业性的网站还提供RSS，但是开启了全站防护，导致RSS订阅也会触发防护，形同虚设了。&lt;/p>
&lt;p>另一方面，随着信息爆炸，以及App化，很多软件改用个性推送的方式了，我们很容易就被淹没在信息流中。&lt;br>
一些人意识到了这个问题，采用回归订阅的方式来获取信息，以提高获取效率。&lt;/p>
&lt;p>有个开源项目&lt;a href="https://rss.tips/">ALL-about-RSS&lt;/a>收集了RSS的相关文章、工具、阅读器等。&lt;/p>
&lt;h2 id="rsshub">RSSHub&lt;/h2>
&lt;p>经过搜索，发现有个RSSHub的项目，已经提供了不少对不支持RSS的网站而开发的RSS，由各个提交者来维护。&lt;br>
并且宣传工作似乎做得不错，聚集了不少人对项目做出贡献。&lt;/p>
&lt;p>经过体验，一些国外站点效果倒是不错，国内普遍不稳定。总结一下发现的问题。&lt;/p>
&lt;ol>
&lt;li>可用率不高。毕竟除了项目发起人，其他人似乎不会花很多时间来维护。而且对于现在普遍给网站套防护的情况下，直接抓取HTML的成功率越来越低了。&lt;/li>
&lt;li>开发不算友好。框架并没有让编写一个RSS源变得更简单，反而为了适应项目而增加一些上手难度。&lt;/li>
&lt;li>逐渐依赖爬虫技术。我常去的网站虽有提供RSS，也会防护检测，不用浏览器就不行。而对商业性的更是可能触碰他们的利益而惹麻烦。&lt;/li>
&lt;/ol>
&lt;h2 id="阅读器">阅读器&lt;/h2>
&lt;p>阅读器市场就更离谱了。虽然RSS已经不那么流行，但还是有一批死忠粉。为了收割这群人，阅读器市场的商业化非常严重。&lt;br>
各种订阅平台，多是收费的；各种阅读软件，多是收费的。&lt;/p>
&lt;p>试了一圈，总体感觉，虽然都想收费，但是体验上其实并没有特别出色。因为本身RSS订阅是个很简单纯粹的事情。&lt;/p>
&lt;h2 id="我的选择">我的选择&lt;/h2>
&lt;ol>
&lt;li>miniflux 管理订阅&lt;/li>
&lt;li>Linux端NewsFlash客户端，支持miniflux的API。&lt;/li>
&lt;li>其他端直接使用miniflux的Web界面，体验也还行。&lt;/li>
&lt;/ol>
&lt;p>手机端想要一个客户端提供推送的能力，但是实在是没什么好的选择，另外RSS本身实时性不高，推送的意义也不怎么大，就这样吧。&lt;/p>- https://www.panwenbin.cn/posts/repick-rss/ - 2025 潘文斌</description></item><item><title>Tmux 出現 missing or unsuitable terminal: xterm-256color</title><link>https://www.panwenbin.cn/posts/tmux-missing-xterm-256color/</link><pubDate>Wed, 21 May 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/tmux-missing-xterm-256color/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/tmux-missing-xterm-256color/ -&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>新开的VPS，安装tmux后进入tmux，提示&lt;code>missing or unsuitable terminal: xterm-256color&lt;/code>&lt;br>
进vim也会有这个提示。&lt;/p>&lt;/blockquote>
&lt;h2 id="思路">思路&lt;/h2>
&lt;p>显然是哪里指定了TERM为&lt;code>xterm-256color&lt;/code>，但是缺少支持文件。&lt;/p>
&lt;p>从packages.debian.org上，查找一下256color结尾的文件。可以看到大多数来自&lt;code>ncurses-term&lt;/code>这个包，大概安装上就行了。&lt;/p>
&lt;p>或者另一个思路，不使用256配色呢。&lt;/p>
&lt;h2 id="回答">回答&lt;/h2>
&lt;p>安装&lt;code>ncurses-term&lt;/code>包，问题解决。&lt;br>
如果实在不想安装，&lt;code>export TERM=xterm&lt;/code>临时不再使用256配色。&lt;/p>- https://www.panwenbin.cn/posts/tmux-missing-xterm-256color/ - 2025 潘文斌</description></item><item><title>Linux上使用V4L2摄像头</title><link>https://www.panwenbin.cn/posts/linux-v4l-camera/</link><pubDate>Thu, 08 May 2025 21:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/linux-v4l-camera/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/linux-v4l-camera/ -&lt;h2 id="目标">目标&lt;/h2>
&lt;blockquote>
&lt;p>Linux下查看摄像头画面，录制摄像头画面。&lt;/p>&lt;/blockquote>
&lt;h2 id="v4l内核模块">V4L内核模块&lt;/h2>
&lt;p>Video for Linux (V4L)，现在已经是V4L2了，V4L2是Linux内核中用于视频设备的API。它提供了一种标准化的方式来访问视频设备，如摄像头、电视调谐器等。&lt;/p>
&lt;p>没有安装V4L模块之前是看不到 /dev/video* 设备的，
通过命令&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ls /dev/video*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>zsh: no matches found: /dev/video*
&lt;/code>&lt;/pre>&lt;p>尝试加载v4l2loopback&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo modprobe v4l2loopback
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>提示&lt;/p>
&lt;pre tabindex="0">&lt;code>modprobe: FATAL: Module v4l2loopback not found in directory /lib/modules/6.1.0-18-amd64
&lt;/code>&lt;/pre>&lt;p>看样子没安装，尝试安装v4l2loopback&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install v4l2loopback-dkms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后再modprobe，如果这边提示&lt;/p>
&lt;pre tabindex="0">&lt;code>modprobe: ERROR: could not insert &amp;#39;v4l2loopback&amp;#39;: Key was rejected by service
&lt;/code>&lt;/pre>&lt;p>则是启用了SecureBoot，需要对模块签名才能加载。&lt;/p>
&lt;h2 id="签名问题">签名问题&lt;/h2>
&lt;p>如果没有上面提示，则直接跳过签名部分。&lt;/p>
&lt;p>签名问题的解决方案是关闭SecureBoot或者自签名模块。这里只讨论自签名。&lt;/p>
&lt;h3 id="mokutil">mokutil&lt;/h3>
&lt;p>mokutil是一个用于管理MOK（Machine Owner Key）列表的工具。MOK是UEFI Secure Boot的一部分，用于允许用户添加自定义密钥以签名内核模块。&lt;/p>
&lt;p>确认一下SecureBoot状态&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mokutil --sb-state
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>SecureBoot enabled
&lt;/code>&lt;/pre>&lt;p>注册dkms证书到MOK管理器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mokutil --import /var/lib/dkms/mok.pub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启系统后，会进入 MOK 管理界面，选择 &amp;ldquo;Enroll MOK&amp;rdquo;，注册证书，供内核信任。&lt;/p>
&lt;h2 id="uvc内核模块">UVC内核模块&lt;/h2>
&lt;p>v4l2loopback加载成功了。现在可以看到设备&lt;code>/dev/video0&lt;/code>了。
但是貌似&lt;code>/dev/video0&lt;/code>不是usb摄像头，而是虚拟摄像头。
安装&lt;code>v4l-utils&lt;/code>来查看摄像头信息。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install v4l-utils
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v4l2-ctl --list-devices
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>Dummy video device (0x0000) (platform:v4l2loopback-000):
/dev/video0
&lt;/code>&lt;/pre>&lt;p>尝试加载uvc驱动，再次查看设备&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo modprobe uvcvideo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v4l2-ctl --list-devices
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>Dummy video device (0x0000) (platform:v4l2loopback-000):
/dev/video0
Microsoft® LifeCam HD-6000 for (usb-0000:00:14.0-8):
/dev/video1
/dev/video2
/dev/media0
&lt;/code>&lt;/pre>&lt;p>USB摄像头出来了。
如果查看内容，可以用&lt;code>ffplay&lt;/code>直接播放设备。或者&lt;code>mpv&lt;/code>、&lt;code>vlc&lt;/code>等播放器应该也可以。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffplay /dev/video1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到摄像头画面，是YUYV格式的&lt;/p>
&lt;p>使用&lt;code>ffmpeg&lt;/code>可以方便的录制视频。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffmpeg -f v4l2 -i /dev/video1 -c:v libx264 -preset ultrafast -tune zerolatency -f flv camera.flv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- https://www.panwenbin.cn/posts/linux-v4l-camera/ - 2025 潘文斌</description></item><item><title>什么是UEFI安全启动</title><link>https://www.panwenbin.cn/posts/uefi-secure-boot/</link><pubDate>Thu, 08 May 2025 20:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/uefi-secure-boot/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/uefi-secure-boot/ -&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>什么是UEFI安全启动？&lt;/p>&lt;/blockquote>
&lt;h2 id="回答">回答&lt;/h2>
&lt;p>UEFI 安全启动 (SB) 是一种验证机制，用于确保计算机 UEFI 固件启动的代码是可信的。它旨在保护系统免受恶意代码在启动过程早期（操作系统加载之前）加载和执行的侵害。&lt;/p>
&lt;p>安全启动依靠加密校验和与签名来工作。固件加载的每个程序都包含一个签名和校验和，在允许执行之前，固件会通过验证校验和与签名来验证程序是否可信。在系统上启用安全启动后，任何执行不受信任程序的尝试都将不被允许。这可以阻止意外/未经授权的代码在 UEFI 环境中运行。&lt;/p>
&lt;h2 id="通俗点说">通俗点说&lt;/h2>
&lt;p>安全启动，是只允许受信任机构签署的文件才能在启动阶段运行。&lt;/p>
&lt;p>系统中预制了一些知名厂家（如Microsoft）的密钥，用户也可以导入自己的密钥，并信任。这些信任密钥签署的模块是被允许加载的。&lt;/p>
&lt;p>shim是Linux下作为&lt;code>UEFI&lt;/code>系统上第一阶段&lt;code>bootloader&lt;/code>的程序。Microsoft等CA只要对shim程序签名。shim就可以用于验证和控制MOK（Machine Owner Key）。&lt;/p>
&lt;p>DKMS（动态内核模块系统）是一个用于自动构建和安装内核模块的框架。但需要和MOK配合，也就是需要把DKMS生成的密钥加入MOK中信任。&lt;/p>- https://www.panwenbin.cn/posts/uefi-secure-boot/ - 2025 潘文斌</description></item><item><title>Windows下安装OpenSSH Server</title><link>https://www.panwenbin.cn/posts/windows-openssh-server/</link><pubDate>Wed, 07 May 2025 17:30:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/windows-openssh-server/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/windows-openssh-server/ -&lt;h2 id="起因">起因&lt;/h2>
&lt;blockquote>
&lt;p>有时候要在Windows上执行一些命令，并且不想来回复制结果。通过SSH可以把命令行结果直接输出给本地Linux程序。&lt;/p>&lt;/blockquote>
&lt;h2 id="系统要求">系统要求&lt;/h2>
&lt;p>以下内容只针对Windows10或Windows11，更早期的系统可能不适用。&lt;/p>
&lt;h2 id="从设置中选装">从设置中选装&lt;/h2>
&lt;ol>
&lt;li>打开设置 - 系统 - 可选功能，搜索&amp;quot;SSH&amp;quot;&lt;/li>
&lt;li>选择 &lt;code>OpenSSH 服务器&lt;/code> 添加功能&lt;/li>
&lt;/ol>
&lt;h2 id="使用powershell安装">使用PowerShell安装&lt;/h2>
&lt;ol>
&lt;li>以管理员身份打开PowerShell&lt;/li>
&lt;li>查看OpenSSH安装状态&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">Get-WindowsCapability&lt;/span> &lt;span style="color:#c1abea">-Online&lt;/span> | &lt;span style="color:#ef8383">Where-Object&lt;/span> &lt;span style="color:#c1abea">Name&lt;/span> &lt;span style="color:#c7bf54">-like&lt;/span> &lt;span style="color:#98c379">&amp;#39;OpenSSH*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>返回内容如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>Name : OpenSSH.Client~~~~0.0.1.0
State : Installed
Name : OpenSSH.Server~~~~0.0.1.0
State : NotPresent
&lt;/code>&lt;/pre>&lt;p>返回NotPresent，表示未安装；返回Installed则表示已安装。&lt;/p>
&lt;ol start="3">
&lt;li>安装 OpenSSH 服务器&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">Add-WindowsCapability&lt;/span> &lt;span style="color:#c1abea">-Online&lt;/span> &lt;span style="color:#c1abea">-Name&lt;/span> &lt;span style="color:#c1abea">OpenSSH&lt;/span>.&lt;span style="color:#c1abea">Server&lt;/span>~~~~&lt;span style="color:#d19a66">0.0&lt;/span>.&lt;span style="color:#cebc3a">1&lt;/span>.&lt;span style="color:#cebc3a">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>启动 OpenSSH 服务器&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">Start-Service&lt;/span> &lt;span style="color:#c1abea">sshd&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>设置服务自启动&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">Set-Service&lt;/span> &lt;span style="color:#c1abea">-Name&lt;/span> &lt;span style="color:#c1abea">sshd&lt;/span> &lt;span style="color:#c1abea">-StartupType&lt;/span> &lt;span style="color:#98c379">&amp;#39;Automatic&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>查看端口监听&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">netstat&lt;/span> &lt;span style="color:#c1abea">-an&lt;/span> | &lt;span style="color:#c1abea">findstr&lt;/span> /&lt;span style="color:#c1abea">i&lt;/span> &lt;span style="color:#63c381">&amp;#34;:22&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>确保防火墙允许 SSH 端口&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">Get-NetFirewallRule&lt;/span> &lt;span style="color:#c1abea">-Name&lt;/span> *&lt;span style="color:#ef8383">OpenSSH-Server&lt;/span>* | &lt;span style="color:#ef8383">select &lt;/span>&lt;span style="color:#c1abea">Name&lt;/span>, &lt;span style="color:#c1abea">DisplayName&lt;/span>, &lt;span style="color:#c1abea">Description&lt;/span>, &lt;span style="color:#c1abea">Enabled&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="8">
&lt;li>编辑配置文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">Start-Process&lt;/span> &lt;span style="color:#c1abea">Notepad&lt;/span> &lt;span style="color:#c1abea">C:&lt;/span>\&lt;span style="color:#c1abea">Programdata&lt;/span>\&lt;span style="color:#c1abea">ssh&lt;/span>\&lt;span style="color:#c1abea">sshd_config&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="9">
&lt;li>重启SSH服务使配置生效&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">Restart-Service&lt;/span> &lt;span style="color:#c1abea">sshd&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;ol>
&lt;li>SSH的登录名称是账户的本地账户名&lt;/li>
&lt;li>SSH的密码如果使用的联网账户，则是联网账户密码，如果是本地账户，则是本地账户密码。&lt;/li>
&lt;li>如果用Pubkey验证，管理员的公钥需要放在&lt;code>C:\ProgramData\ssh\administrators_authorized_keys&lt;/code>文件中，其他用户的公钥放在&lt;code>C:\Users\&amp;lt;username&amp;gt;\.ssh\authorized_keys&lt;/code>文件中。&lt;/li>
&lt;/ol>- https://www.panwenbin.cn/posts/windows-openssh-server/ - 2025 潘文斌</description></item><item><title>Linux使用FFmpeg制作简易云电脑</title><link>https://www.panwenbin.cn/posts/linux-grab-screen-using-ffmpeg/</link><pubDate>Sat, 03 May 2025 16:30:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/linux-grab-screen-using-ffmpeg/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/linux-grab-screen-using-ffmpeg/ -&lt;h2 id="起因">起因&lt;/h2>
&lt;blockquote>
&lt;p>最近挺流行云电脑、云游戏的。试一下Linux下使用FFmpeg制作简易云电脑的效果。&lt;/p>&lt;/blockquote>
&lt;h2 id="先上总结">先上总结&lt;/h2>
&lt;blockquote>
&lt;p>最低延时为网络延时+60ms。显示效果不错。内网延时很小，外网鼠标略飘，键盘响应还行&lt;br>
因为鼠标在远端渲染，不像VNC鼠标是在本地渲染。&lt;/p>&lt;/blockquote>
&lt;h2 id="步骤">步骤&lt;/h2>
&lt;h3 id="录制屏幕">录制屏幕&lt;/h3>
&lt;p>FFmpeg使用x11grab可以录制X11的屏幕。intel核显的硬件QSV编码延时太高了，只能用软件libx264编码了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffmpeg -framerate &lt;span style="color:#d19a66">25&lt;/span> -f x11grab -i :0.0 -c:v libx264 output.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此命令中&lt;br>
&lt;code>-framerate 25&lt;/code>设置帧率为25&lt;br>
&lt;code>-f x11grab -i :0.0&lt;/code>使用x11grab录制&lt;code>:0.0&lt;/code>显示器的屏幕&lt;br>
输出到&lt;code>output.mp4&lt;/code>文件中。&lt;/p>
&lt;p>如果使用ssh远程执行并把结果转发到本地呢？&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh user@remote ffmpeg -framerate &lt;span style="color:#d19a66">25&lt;/span> -f x11grab -i :0.0 -c:v libx264 -f h264 - | ffplay -fs -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此命令通过ssh连接在远程执行录制命令，把user@remote替换为ssh服务器用户和地址。其中&lt;br>
&lt;code>-c:v libx264&lt;/code>指定使用libx264编码器进行视频编码&lt;br>
&lt;code>-f h264&lt;/code>指定输出封装为raw的h264格式，因为直接输出到标准输出，就无法根据输出文件推断适合的格式了&lt;br>
这边可选的还有&lt;code>flv&lt;/code>和&lt;code>mpegts&lt;/code>，&lt;code>h264&lt;/code>因为是原始格式，延时会更低。&lt;code>flv&lt;/code>和&lt;code>mpegts&lt;/code>支持封装音频，&lt;code>flv&lt;/code>更简单更适合直播。&lt;br>
使用&lt;code>ffplay&lt;/code>在本地播放标准输入。但是延时很高。&lt;/p>
&lt;p>延时高的第一反应是播放器做了缓冲，尽量关闭播放器的缓冲&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffplay -framedrop -fflags nobuffer -flags low_delay -strict experimental -probesize &lt;span style="color:#d19a66">32&lt;/span> -analyzeduration &lt;span style="color:#d19a66">0&lt;/span> -an -vf &lt;span style="color:#dcaeea">setpts&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span> -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此命令中&lt;br>
&lt;code>-framedrop&lt;/code>允许丢帧&lt;br>
&lt;code>-fflags nobuffer&lt;/code>关闭缓冲&lt;br>
&lt;code>-flags low_delay&lt;/code>设置低延时模式&lt;br>
&lt;code>-strict experimental&lt;/code>使用实验性功能，允许使用不稳定的编解码器。&lt;br>
&lt;code>-probesize 32&lt;/code>设置探测大小为32字节&lt;br>
&lt;code>-analyzeduration 0&lt;/code>设置分析持续时间为0&lt;br>
&lt;code>-an&lt;/code>禁用音频&lt;br>
&lt;code>-vf setpts=0&lt;/code>设置视频时间戳为0&lt;/p>
&lt;p>效果非常明显，已经只能感觉到很小的延时了。&lt;br>
编码的时候也可以设置一些参数减少延时&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh user@remote ffmpeg -framerate &lt;span style="color:#d19a66">25&lt;/span> -f x11grab -i :0.0 -preset ultrafast -tune zerolatency -c:v libx264 -f h264 - | ffplay -framedrop -fflags nobuffer -flags low_delay -strict experimental -probesize &lt;span style="color:#d19a66">32&lt;/span> -analyzeduration &lt;span style="color:#d19a66">0&lt;/span> -an -vf &lt;span style="color:#dcaeea">setpts&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span> -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>-preset ultrafast&lt;/code>设置编码速度为最快&lt;br>
&lt;code>-tune zerolatency&lt;/code>设置编码延时为0&lt;/p>
&lt;h3 id="声音">声音&lt;/h3>
&lt;p>声音处理有2种方式：一种是封装进flv一起播放出来，另一种是单独再开一个通道播放。&lt;br>
方式依然采用ffmpeg+ffplay&lt;/p>
&lt;p>先找到声卡设备，可以借助pulse。最简单也可能有效的直接选择default设备。&lt;/p>
&lt;p>方式一：改用flv。把&lt;code>-an&lt;/code>换成了&lt;code>-sync ext&lt;/code>，做一下音视频同步。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh user@remote ffmpeg -framerate &lt;span style="color:#d19a66">25&lt;/span> -f x11grab -i :0.0 -f pulse -i default -preset ultrafast -tune zerolatency -c:v libx264 -f flv - | ffplay -framedrop -fflags nobuffer -flags low_delay -strict experimental -probesize &lt;span style="color:#d19a66">32&lt;/span> -analyzeduration &lt;span style="color:#d19a66">0&lt;/span> -sync ext -vf &lt;span style="color:#dcaeea">setpts&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span> -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果不行，可能要手动选择。先列出所有的声卡设备&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pactl list short sources
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会列出所有的声卡设备，找到对应的设备名称，比如&lt;code>alsa_input.pci-0000_00_1b.0.analog-stereo&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pactl set-default-source alsa_input.pci-0000_00_1b.0.analog-stereo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置为默认设备，再试就可以了，或者命令里直接&lt;code>-f pulse -i alsa_input.pci-0000_00_1b.0.analog-stereo&lt;/code>。&lt;/p>
&lt;p>经测试，用flv封装音频比较正常，画面延时会比h264稍微高一点点，效果很不错了。&lt;br>
mpegts封装aac容易不识别，改为ac3可以，但是和hevc一起有会播放不了音频。&lt;/p>
&lt;p>方式二：画面还是用h264，音频单独再开一个通道，用adts封装。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh user@remote ffmpeg -f pulse -i default -c:a aac -b:a 128k -f adts - | ffplay -fflags nobuffer -framedrop -flags low_delay -vn -nodisp -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;br>
&lt;code>-c:a aac&lt;/code>设置音频编码器为aac&lt;br>
&lt;code>-b:a 128k&lt;/code>设置音频比特率为128kbps&lt;br>
&lt;code>-f adts&lt;/code>设置音频封装格式为adts&lt;br>
&lt;code>-vn&lt;/code>禁用视频流&lt;br>
&lt;code>-nodisp&lt;/code>禁用显示窗口&lt;/p>
&lt;p>这样画面延时会更低，音频延时会高一点点，会有不同步的情况。但有另一个好处是单独音频可以搭配VNC使用。&lt;/p>
&lt;h3 id="键鼠">键鼠&lt;/h3>
&lt;p>键鼠方案其实挺多的，如usbip、x2x、x2vnc、evdev转发等，但是鼠标映射都会带来一些延时，最好是VNC哪种本地渲染鼠标发送到远程的方式，暂未尝试。&lt;/p>
&lt;p>这边使用x2vnc，远端只要有VNC Server就行，相对简单。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/usr/bin/x2vnc remote:0 -west -passwdfile ~/.vnc/passwd -shared
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;br>
&lt;code>remote:0&lt;/code>指定远程VNC服务器的显示器，remote替换为VNC服务器地址&lt;br>
&lt;code>-west&lt;/code>指定鼠标从本地屏幕向西移动时切换到远程屏幕&lt;br>
&lt;code>-passwdfile ~/.vnc/passwd&lt;/code>指定VNC密码文件&lt;br>
&lt;code>-shared&lt;/code>允许多个客户端同时连接&lt;/p>
&lt;h2 id="延伸">延伸&lt;/h2>
&lt;ol>
&lt;li>鼠标在本地移动和点击后，发送相对于显示内容的位置和事件到远程，可以改善鼠标漂移的体验。&lt;/li>
&lt;li>通过&lt;code>-window_id&lt;/code>可以指定录制窗口，后台窗口也可以。如果配合xdotool应该可以操作单个窗口。&lt;/li>
&lt;li>如果录制端是Windows系统和N卡，能做到最低多少延时。&lt;/li>
&lt;/ol>- https://www.panwenbin.cn/posts/linux-grab-screen-using-ffmpeg/ - 2025 潘文斌</description></item><item><title>Linux如何定时关机</title><link>https://www.panwenbin.cn/posts/linux-scheduled-shutdown/</link><pubDate>Sat, 03 May 2025 16:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/linux-scheduled-shutdown/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/linux-scheduled-shutdown/ -&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>Linux下如何定时关机？&lt;/p>&lt;/blockquote>
&lt;h2 id="回答">回答&lt;/h2>
&lt;p>使用&lt;code>shutdown&lt;/code>命令可以实现定时关机。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>shutdown -h 23:00 &lt;span style="color:#8a93a5;font-style:italic"># 在23:00关机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shutdown -h +60 &lt;span style="color:#8a93a5;font-style:italic"># 60分钟后关机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shutdown -c &lt;span style="color:#8a93a5;font-style:italic"># 取消定时关机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shutdown -h now &lt;span style="color:#8a93a5;font-style:italic"># 立即关机&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>需要管理员身份运行或者加上&lt;code>sudo&lt;/code>。&lt;/p>- https://www.panwenbin.cn/posts/linux-scheduled-shutdown/ - 2025 潘文斌</description></item><item><title>Linux串口访问/dev/ttyUSB0提示[screen is terminating]</title><link>https://www.panwenbin.cn/posts/linux-tty-screen-is-terminating/</link><pubDate>Mon, 28 Apr 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/linux-tty-screen-is-terminating/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/linux-tty-screen-is-terminating/ -&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>当使用&lt;code>screen /dev/ttyUSB0 115200&lt;/code>命令访问串口时，提示&lt;code>[screen is terminating]&lt;/code>，无法正常使用。&lt;/p>&lt;/blockquote>
&lt;h2 id="回答">回答&lt;/h2>
&lt;p>遇到类似如下情况&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ screen /dev/ttyUSB0 &lt;span style="color:#d19a66">115200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">[&lt;/span>screen is terminating&lt;span style="color:#c7bf54">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以从dmesg中查看错误信息，一个可行的处理方式是&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo usermod -a -G dialout &lt;span style="color:#dcaeea">$USER&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后注销当前用户，重新登录即可。&lt;/p>- https://www.panwenbin.cn/posts/linux-tty-screen-is-terminating/ - 2025 潘文斌</description></item><item><title>Windows下的平铺窗口管理器komorebi尝试</title><link>https://www.panwenbin.cn/posts/win-wm-komorebi/</link><pubDate>Sun, 27 Apr 2025 08:00:00 +0800</pubDate><guid>https://www.panwenbin.cn/posts/win-wm-komorebi/</guid><description>潘文斌的技术文章 https://www.panwenbin.cn/posts/win-wm-komorebi/ -&lt;h2 id="关注">关注&lt;/h2>
&lt;blockquote>
&lt;p>是在关注yasb的时候，发现它可以和komorebi一起使用。经搜索，komorebi原来是一个Windows下的平铺窗口管理器。&lt;/p>&lt;/blockquote>
&lt;h2 id="尝试">尝试&lt;/h2>
&lt;p>项目地址是 &lt;a href="https://github.com/LGUG2Z/komorebi">https://github.com/LGUG2Z/komorebi&lt;/a>&lt;/p>
&lt;p>安装程序，可以直接下载或者用winget等。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>winget install LGUG2Z.komorebi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>winget install LGUG2Z.whkd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下载配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>komorebic quickstart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>komorebic start --whkd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置">配置&lt;/h2>
&lt;p>默认的边距太大了，尝试修改
&lt;code>komorebi.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;default_workspace_padding&amp;#34;&lt;/span>:&lt;span style="color:#d19a66">5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;default_container_padding&amp;#34;&lt;/span>:&lt;span style="color:#d19a66">2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;border&amp;#34;&lt;/span>:&lt;span style="color:#b756ff;font-weight:bold">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置修改后大约1秒会生效，不用重启程序。&lt;/p>- https://www.panwenbin.cn/posts/win-wm-komorebi/ - 2025 潘文斌</description></item></channel></rss>